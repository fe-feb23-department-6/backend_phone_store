{
  "openapi": "3.0.3",
  "info": {
    "title": "Product catalog API",
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "https://backend-phone-store.onrender.com/"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get the list of products",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": 16,
              "enum": [
                16,
                32
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "newest",
              "enum": [
                "newest",
                "cheapest",
                "expensive",
                "abc",
                "zyx"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/phones": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get the list of products",
        "operationId": "getPhones",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": 16,
              "enum": [
                16,
                32
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "newest",
              "enum": [
                "newest",
                "cheapest",
                "expensive",
                "abc",
                "zyx"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/phones/{phoneId}": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get the list of phones with the same namespaceId by phoneId",
        "operationId": "getByPhoneId",
        "parameters": [
          {
            "name": "phoneId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "varchar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phones"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/tablets": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get the list of products",
        "operationId": "getTablets",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": 16,
              "enum": [
                16,
                32
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "newest",
              "enum": [
                "newest",
                "cheapest",
                "expensive",
                "abc",
                "zyx"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/accessories": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get the list of products",
        "operationId": "getAccessories",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": 16,
              "enum": [
                16,
                32
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "default": "newest",
              "enum": [
                "newest",
                "cheapest",
                "expensive",
                "abc",
                "zyx"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/new": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get the list of brand new products",
        "operationId": "getNewProducts",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/discount": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get the list products with the biggest discount",
        "operationId": "getDiscount",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get product by productId",
        "operationId": "getByProductId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "varchar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{namespaceId}/recommended": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get the list of similar products",
        "operationId": "getByNamespaceIdRecommended",
        "parameters": [
          {
            "name": "namespaceId",
            "in": "path",
            "description": "namespaceId of products",
            "required": true,
            "schema": {
              "type": "string",
              "format": "varchar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/cart": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get the list of products added to cart",
        "operationId": "getCart",
        "parameters": [
          {
            "in": "query",
            "name": "phoneIds",
            "description": "A comma-separated list of phone IDs",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/favorites": {
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get the list of favorites products",
        "operationId": "getFavorites",
        "parameters": [
          {
            "in": "query",
            "name": "phoneIds",
            "description": "A comma-separated list of phone IDs",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/{imagePath}": {
      "get": {
        "tags": [
          "images"
        ],
        "description": "Get an image from the server.",
        "operationId": "getImage",
        "parameters": [
          {
            "name": "imagePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "img/phones/apple-iphone-xr/coral/00.jpg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Image not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "description": "Get the list of active users",
        "operationId": "getAllActiveUsers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "Get user by id",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "varchar"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "description": "Delete user",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "description": "Update user",
        "operationId": "UpdateUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "User data to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/users/{userId}/orders/{orderId}": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "Get oder by userId and orderId",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/registration": {
      "post": {
        "tags": [
          "authentication"
        ],
        "description": "Register a new user",
        "operationId": "registerUser",
        "requestBody": {
          "description": "User data for registration",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email is already taken"
          }
        }
      }
    },
    "/activation/{activationToken}": {
      "get": {
        "tags": [
          "authentication"
        ],
        "description": "Activate a new user",
        "operationId": "activateUser",
        "parameters": [
          {
            "in": "path",
            "name": "activationToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful activation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserActivationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "description": "Log in a user",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User login data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserActivationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password."
          }
        }
      }
    },
    "/refresh": {
      "get": {
        "tags": [
          "authentication"
        ],
        "description": "Refresh user token",
        "operationId": "refreshUserToken",
        "parameters": [
          {
            "in": "cookie",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Refresh token stored in cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful token refresh",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserActivationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing refresh token"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "description": "Logout the current user",
        "operationId": "logoutUser",
        "parameters": [
          {
            "in": "cookie",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Access token stored in cookie"
          }
        ],
        "responses": {
          "204": {
            "description": "Logout successful"
          },
          "400": {
            "description": "Invalid or missing token"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "orders"
        ],
        "description": "Add a new order",
        "operationId": "addOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "orders"
        ],
        "description": "Get orders",
        "operationId": "getOrders",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderSummaryResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders/{orderId}": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "Get order by id",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserOrderResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "description": "Delete order",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/orders/{orderId}/orderDetails/{orderDetailsId}": {
      "patch": {
        "tags": [
          "orders"
        ],
        "description": "Get order detail",
        "operationId": "getOrderDetail",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderDetailsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetailUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Order or order detail not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "description": "Delete order detail",
        "operationId": "deleteOrderDetails",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderDetailsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted"
          },
          "404": {
            "description": "Order or order detail not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders/{orderId}/orderDetails": {
      "post": {
        "tags": [
          "orders"
        ],
        "description": "Add order detail",
        "operationId": "addOrderDetails",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetailUpdate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "varchar",
            "example": 1
          },
          "category": {
            "type": "string",
            "format": "varchar",
            "example": "phones"
          },
          "phone_id": {
            "type": "string",
            "format": "varchar",
            "example": "apple-iphone-7-32gb-black"
          },
          "item_id": {
            "type": "string",
            "format": "varchar",
            "example": "apple-iphone-7-32gb-black"
          },
          "name": {
            "type": "string",
            "format": "varchar",
            "example": "Apple iPhone 7 32GB Black"
          },
          "full_price": {
            "type": "integer",
            "format": "int4",
            "example": 400
          },
          "price": {
            "type": "integer",
            "format": "int4",
            "example": 350
          },
          "screen": {
            "type": "string",
            "format": "varchar",
            "example": "4.7' IPS"
          },
          "capacity": {
            "type": "string",
            "format": "varchar",
            "example": "32GB"
          },
          "color": {
            "type": "string",
            "format": "varchar",
            "example": "black"
          },
          "ram": {
            "type": "string",
            "format": "varchar",
            "example": "2GB"
          },
          "year": {
            "type": "integer",
            "format": "int4",
            "example": 2016
          },
          "image": {
            "type": "string",
            "format": "varchar",
            "example": "img/phones/apple-iphone-7/black/00.jpg"
          }
        }
      },
      "Products": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Product"
        }
      },
      "Phone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "varchar",
            "example": "apple-iphone-11-128gb-black"
          },
          "namespace_id": {
            "type": "string",
            "format": "varchar",
            "example": "apple-iphone-11"
          },
          "name": {
            "type": "string",
            "format": "varchar",
            "example": "Apple iPhone 11 128GB Black"
          },
          "capacity_available": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "64GB",
              "128GB",
              "256GB"
            ]
          },
          "capacity": {
            "type": "string",
            "format": "varchar",
            "example": "128GB"
          },
          "price_regular": {
            "type": "integer",
            "format": "int4",
            "example": 1100
          },
          "price_discount": {
            "type": "integer",
            "format": "int4",
            "example": 1050
          },
          "colors_available": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "black",
              "green",
              "yellow",
              "white",
              "purple",
              "red"
            ]
          },
          "color": {
            "type": "string",
            "format": "varchar",
            "example": "black"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "img/phones/apple-iphone-11/black/00.jpg",
              "img/phones/apple-iphone-11/black/01.jpg"
            ]
          },
          "description": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "format": "varchar"
                },
                "text": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "screen": {
            "type": "string",
            "format": "varchar",
            "example": "6.1' IPS"
          },
          "resolution": {
            "type": "string",
            "format": "varchar",
            "example": "1792x828"
          },
          "processor": {
            "type": "string",
            "format": "varchar",
            "example": "Apple A13 Bionic"
          },
          "ram": {
            "type": "string",
            "format": "varchar",
            "example": "4GB"
          },
          "camera": {
            "type": "string",
            "format": "varchar",
            "example": "12 Mp + 12 Mp + 12MP"
          },
          "zoom": {
            "type": "string",
            "format": "varchar",
            "example": "Digital, 5x"
          },
          "cell": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "GPRS",
              "EDGE",
              "WCDMA",
              "UMTS",
              "HSPA",
              "LTE"
            ]
          }
        }
      },
      "Phones": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Phone"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "activationToken": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "password"
        ]
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "email"
        ]
      },
      "UsersResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserResponse"
        }
      },
      "UserOrderResponse": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "integer",
            "format": "int32"
          },
          "products_id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "productInfo": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "required": [
          "order_id",
          "products_id",
          "quantity",
          "productInfo"
        ]
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "password"
        ]
      },
      "UserRegistration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "UserActivationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "accessToken": {
            "type": "string"
          }
        },
        "required": [
          "user",
          "accessToken"
        ]
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "ProductOrder": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          }
        },
        "required": [
          "productId",
          "quantity"
        ]
      },
      "OrderRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOrder"
            }
          }
        },
        "required": [
          "userId",
          "products"
        ]
      },
      "ProductOrderResponse": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "integer"
          },
          "products_id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          }
        },
        "required": [
          "order_id",
          "products_id",
          "quantity"
        ]
      },
      "OrderResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOrderResponse"
            }
          }
        },
        "required": [
          "id",
          "user_id",
          "products"
        ]
      },
      "OrderSummaryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "createdAt"
        ]
      },
      "OrderDetailUpdate": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer"
          },
          "productId": {
            "type": "string"
          }
        },
        "required": [
          "quantity",
          "productId"
        ]
      },
      "OrderDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "order_id": {
            "type": "integer"
          },
          "products_id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "order_id",
          "products_id",
          "quantity"
        ]
      }
    }
  }
}